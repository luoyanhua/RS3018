C51 COMPILER V9.54   BEEP                                                                  05/28/2022 08:12:07 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE BEEP
OBJECT MODULE PLACED IN .\list\Beep.obj
COMPILER INVOKED BY: D:\keil\keil_C51\C51\BIN\C51.EXE Beep.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\list\Be
                    -ep.lst) OBJECT(.\list\Beep.obj)

line level    source

   1          /*---------------------------------------------------------------------*/
   2          /* --- STC MCU Limited ------------------------------------------------*/
   3          /* --- STC 1T Series MCU Demo Programme -------------------------------*/
   4          /* --- Mobile: (86)13922805190 ----------------------------------------*/
   5          /* --- Fax: 86-0513-55012956,55012947,55012969 ------------------------*/
   6          /* --- Tel: 86-0513-55012928,55012929,55012966 ------------------------*/
   7          /* --- Web: www.STCMCU.com --------------------------------------------*/
   8          /* --- Web: www.STCMCUDATA.com  ---------------------------------------*/
   9          /* --- QQ:  800003751 -------------------------------------------------*/
  10          /* 如果要在程序中使用此代码,请在程序中注明使用了STC的资料及程序            */
  11          /*---------------------------------------------------------------------*/
  12          
  13          #include "Beep.h"
  14          #include "timer.h"
  15          
  16          bit beepStartFlag = 0;    //控制蜂鸣器是否鸣笛
  17          bit beepAlarmRunFlag = 0; //控制定时器1K信号是否工作
  18          typedef struct
  19          {
  20                  unsigned char State;
  21                  unsigned char ModeSet;
  22                  unsigned short TimeSet;
  23                  unsigned int TimeCnt;
  24          } BeepAlarmStruct_T;
  25          
  26          BeepAlarmStruct_T BeepAlarmStruct;
  27          
  28          //获取蜂鸣器报警标志
  29          bit Get_beepAlarmRunFlag(void)
  30          {
  31   1              return beepAlarmRunFlag;
  32   1      }
  33          
  34          //开始蜂鸣器报警设定值
  35          // time:持续时间
  36          // speed：连续鸣笛速度 0:慢速，1：快速
  37          // mode:鸣笛模式 0:1次 ，1：连续
  38          void StartBeepAlarm(unsigned short time, unsigned char mode) // time单位1ms
  39          {
  40   1              BeepAlarmStruct.State = 0;
  41   1              BeepAlarmStruct.TimeSet = time * 2;
  42   1              BeepAlarmStruct.ModeSet = mode;
  43   1              beepAlarmRunFlag = 1;
  44   1              beepStartFlag = 1;
  45   1      }
  46          
  47          //清除报警
  48          void ClrBeepAlarm(void)
  49          {
  50   1              beepStartFlag = 0;
  51   1              beepAlarmRunFlag = 0;
  52   1      }
  53          
  54          //运行蜂鸣器报警任务
C51 COMPILER V9.54   BEEP                                                                  05/28/2022 08:12:07 PAGE 2   

  55          void BeepAlarmTask(void)
  56          {
  57   1              if (beepStartFlag == 0)
  58   1                      return;
  59   1              switch (BeepAlarmStruct.State)
  60   1              {
  61   2              case 0:
  62   2                      beepAlarmRunFlag = 1;
  63   2                      BeepAlarmStruct.TimeCnt = Get_SysHalfMsTick();
  64   2                      BeepAlarmStruct.State = 1;
  65   2                      break;
  66   2              case 1:
  67   2                      if (get_time_escape_sec(Get_SysHalfMsTick(), BeepAlarmStruct.TimeCnt) >= BeepAlarmStruct.TimeSet)
  68   2                      {
  69   3                              beepAlarmRunFlag = 0;
  70   3                              if (BeepAlarmStruct.ModeSet)
  71   3                              {
  72   4                                      ClrBeepAlarm();
  73   4                              }
  74   3                              else
  75   3                              {
  76   4                                      BeepAlarmStruct.State = 2;
  77   4                              }
  78   3                      }
  79   2                      break;
  80   2              case 2:
  81   2                      if (get_time_escape_sec(Get_SysHalfMsTick(), BeepAlarmStruct.TimeCnt) >= BeepAlarmStruct.TimeSet * 2)
  82   2                      {
  83   3                              BeepAlarmStruct.State = 0;
  84   3                      }
  85   2                      break;
  86   2              default:
  87   2                      break;
  88   2              }
  89   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    121    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
