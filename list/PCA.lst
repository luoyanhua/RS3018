C51 COMPILER V9.54   PCA                                                                   02/19/2022 11:06:50 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE PCA
OBJECT MODULE PLACED IN .\list\PCA.obj
COMPILER INVOKED BY: D:\keil\keil_C51\C51\BIN\C51.EXE PCA.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\list\PCA
                    -.lst) TABS(2) OBJECT(.\list\PCA.obj)

line level    source

   1          /*---------------------------------------------------------------------*/
   2          /* --- STC MCU Limited ------------------------------------------------*/
   3          /* --- STC 1T Series MCU Demo Programme -------------------------------*/
   4          /* --- Mobile: (86)13922805190 ----------------------------------------*/
   5          /* --- Fax: 86-0513-55012956,55012947,55012969 ------------------------*/
   6          /* --- Tel: 86-0513-55012928,55012929,55012966 ------------------------*/
   7          /* --- Web: www.STCMCU.com --------------------------------------------*/
   8          /* --- Web: www.STCMCUDATA.com  ---------------------------------------*/
   9          /* --- QQ:  800003751 -------------------------------------------------*/
  10          /* 如果要在程序中使用此代码,请在程序中注明使用了STC的资料及程序            */
  11          /*---------------------------------------------------------------------*/
  12          
  13          #include  "PCA.h"
  14          
  15          bit   B_Capture0,B_Capture1,B_Capture2;
  16          u8    PCA0_mode,PCA1_mode,PCA2_mode;
  17          u16   CCAP0_tmp,PCA_Timer0;
  18          u16   CCAP1_tmp,PCA_Timer1;
  19          u16   CCAP2_tmp,PCA_Timer2;
  20          u16   CAP1_Old;       //记录上一次的捕获值
  21          u16   CAP1_New;       //记录本次的捕获值
  22          
  23          /*************  功能说明  **************
  24          
  25          
  26          ******************************************/
  27          
  28          //========================================================================
  29          // 函数: void PCA_Init(PCA_id, PCA_InitTypeDef *PCAx)
  30          // 描述: PCA初始化程序.
  31          // 参数: PCA_id: PCA序号. 取值 PCA0,PCA1,PCA2,PCA_Counter
  32          //     PCAx: 结构参数,请参考PCA.h里的定义.
  33          // 返回: none.
  34          // 版本: V1.0, 2012-11-22
  35          //========================================================================
  36          void  PCA_Init(u8 PCA_id, PCA_InitTypeDef *PCAx)
  37          {
  38   1        if(PCA_id > PCA_Counter)  return;   //id错误
  39   1      
  40   1        if(PCA_id == PCA_Counter)     //设置公用Counter
  41   1        {
  42   2          CR = 0;
  43   2          CH = 0;
  44   2          CL = 0;
  45   2          P_SW1 = (P_SW1 & ~(3<<4)) | PCAx->PCA_IoUse;      //切换IO口
  46   2          CMOD  = (CMOD  & ~(7<<1)) | PCAx->PCA_Clock;      //选择时钟源
  47   2          CMOD  = (CMOD  & ~1) | (PCAx->PCA_Interrupt_Mode & 1);  //ECF
  48   2          if(PCAx->PCA_Priority > Priority_3) return; //错误
  49   2          PCA_Priority(PCAx->PCA_Priority); //指定中断优先级(低到高) Priority_0,Priority_1,Priority_2,Priority_3
  50   2          if(PCAx->PCA_RUN == ENABLE) CR = 1;
  51   2          return;
  52   2        }
  53   1      
  54   1        PCAx->PCA_Interrupt_Mode &= (3<<4) + 1;
C51 COMPILER V9.54   PCA                                                                   02/19/2022 11:06:50 PAGE 2   

  55   1        if(PCAx->PCA_Mode >= PCA_Mode_SoftTimer)  PCAx->PCA_Interrupt_Mode &= ~(3<<4);
  56   1      
  57   1        if(PCA_id == PCA0)
  58   1        {
  59   2          CCAPM0    = PCAx->PCA_Mode | PCAx->PCA_Interrupt_Mode;  //工作模式, 中断模式
  60   2          PCA_PWM0  = (PCA_PWM0 & ~(3<<6)) | PCAx->PCA_PWM_Wide;  //PWM宽度
  61   2      
  62   2          PCA_Timer0 = PCAx->PCA_Value;
  63   2          B_Capture0 = 0;
  64   2          PCA0_mode = PCAx->PCA_Mode;
  65   2          CCAP0_tmp = PCA_Timer0;
  66   2          CCAP0L = (u8)CCAP0_tmp;     //将影射寄存器写入捕获寄存器，先写CCAP0L
  67   2          CCAP0H = (u8)(CCAP0_tmp >> 8);  //后写CCAP0H
  68   2        }
  69   1        if(PCA_id == PCA1)
  70   1        {
  71   2          CCAPM1    = PCAx->PCA_Mode | PCAx->PCA_Interrupt_Mode;
  72   2          PCA_PWM1  = (PCA_PWM1 & ~(3<<6)) | PCAx->PCA_PWM_Wide;
  73   2      
  74   2          PCA_Timer1 = PCAx->PCA_Value;
  75   2          B_Capture1 = 0;
  76   2          PCA1_mode = PCAx->PCA_Mode;
  77   2          CCAP1_tmp = PCA_Timer1;
  78   2          CCAP1L = (u8)CCAP1_tmp;     //将影射寄存器写入捕获寄存器，先写CCAP1L
  79   2          CCAP1H = (u8)(CCAP1_tmp >> 8);  //后写CCAP1H
  80   2        }
  81   1        if(PCA_id == PCA2)
  82   1        {
  83   2          CCAPM2    = PCAx->PCA_Mode | PCAx->PCA_Interrupt_Mode;
  84   2          PCA_PWM2  = (PCA_PWM2 & ~(3<<6)) | PCAx->PCA_PWM_Wide;
  85   2      
  86   2          PCA_Timer2 = PCAx->PCA_Value;
  87   2          B_Capture2 = 0;
  88   2          PCA2_mode = PCAx->PCA_Mode;
  89   2          CCAP2_tmp = PCA_Timer2;
  90   2          CCAP2L = (u8)CCAP2_tmp;     //将影射寄存器写入捕获寄存器，先写CCAP2L
  91   2          CCAP2H = (u8)(CCAP2_tmp >> 8);  //后写CCAP2H
  92   2        }
  93   1      }
  94          
  95          u8  plusRevCnt = 0;
  96          
  97          void Clr_plusRevCnt(void)
  98          {
  99   1        plusRevCnt = 0;
 100   1      }
 101          
 102          u8 Get_plusRevCnt(void)
 103          {
 104   1          return plusRevCnt;
 105   1      }
 106          
 107          void PCA_Start(void)
 108          {
 109   1        CR = 1;             //启动PCA 
 110   1        CAP1_Old = 0;
 111   1        CAP1_New = 0; 
 112   1      }
 113          
 114          void PCA_Stop(void)
 115          {
 116   1        CR = 0;             //停止PCA 
C51 COMPILER V9.54   PCA                                                                   02/19/2022 11:06:50 PAGE 3   

 117   1      }
 118          
 119          //========================================================================
 120          // 函数: void PCA_Handler (void) interrupt PCA_VECTOR
 121          // 描述: PCA中断处理程序.
 122          // 参数: None
 123          // 返回: none.
 124          // 版本: V1.0, 2012-11-22
 125          //========================================================================
 126          void  PCA_Handler (void) interrupt PCA_VECTOR
 127          {
 128   1        if(CCF0)    //PCA模块0中断
 129   1        {
 130   2          CCF0 = 0;   //清PCA模块0中断标志
 131   2        }
 132   1        if(CCF1)  //PCA模块1中断
 133   1        {
 134   2          CCF1 = 0;   //清PCA模块1中断标志
 135   2          CAP1_Old = CAP1_New;
 136   2          CAP1_New = CCAP1H;  //读CCAP1H
 137   2          CAP1_New = (CAP1_New << 8) + CCAP1L;
 138   2          CCAP1_tmp = CAP1_New - CAP1_Old;    
 139   2          plusRevCnt++;
 140   2        }
 141   1      
 142   1        if(CCF2)  //PCA模块2中断
 143   1        {
 144   2          CCF2 = 0;   //清PCA模块1中断标志
 145   2        }
 146   1      
 147   1        if(CF)  //PCA溢出中断
 148   1        {
 149   2          CF = 0;     //清PCA溢出中断标志
 150   2        }
 151   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    520    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     20       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      3    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
