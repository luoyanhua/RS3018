C51 COMPILER V9.54   TASK                                                                  03/02/2022 21:27:51 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE TASK
OBJECT MODULE PLACED IN .\list\Task.obj
COMPILER INVOKED BY: D:\keil\keil_MDK\C51\BIN\C51.EXE Task.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\list\Ta
                    -sk.lst) OBJECT(.\list\Task.obj)

line level    source

   1          /*---------------------------------------------------------------------*/
   2          /* --- STC MCU Limited ------------------------------------------------*/
   3          /* --- STC 1T Series MCU Demo Programme -------------------------------*/
   4          /* --- Mobile: (86)13922805190 ----------------------------------------*/
   5          /* --- Fax: 86-0513-55012956,55012947,55012969 ------------------------*/
   6          /* --- Tel: 86-0513-55012928,55012929,55012966 ------------------------*/
   7          /* --- Web: www.STCMCU.com --------------------------------------------*/
   8          /* --- Web: www.STCMCUDATA.com  ---------------------------------------*/
   9          /* --- QQ:  800003751 -------------------------------------------------*/
  10          /* 如果要在程序中使用此代码,请在程序中注明使用了STC的资料及程序            */
  11          /*---------------------------------------------------------------------*/
  12          
  13          #include "Task.h"
  14          #include "timer.h"
  15          #include "Beep.h"
  16          #include "Task.h"
  17          #include "Sensor.h"
  18          #include "UART.h"
  19          
  20          unsigned char appTaskState = 0;
  21          unsigned int appTaskTimeCnt = 0;
  22          
  23          // void serialSendTask(void)
  24          //{
  25          //
  26          // }
  27          
  28          void AppTask(void)
  29          {
  30   1          switch (appTaskState)
  31   1          {
  32   2          case 0: //发送PWM 0.5S 用来确认位置信号
  33   2              StartBeepAlarm(500);
  34   2              appTaskTimeCnt = Get_SysHalfMsTick();
  35   2              appTaskState = 1;
  36   2              break;
  37   2          case 1: // Sensor ID会收到自己发的信号
  38   2              if (P34 == 0)
  39   2              {
  40   3                  VirtualCOM_StringSend("recv ID!\r\n"); // UART1发送一个字符串
  41   3                  appTaskState = 2;
  42   3              }
  43   2              else if (get_time_escape_sec(Get_SysHalfMsTick(), appTaskTimeCnt) >= 20) // 10ms超时后继续往下进行
  44   2              {
  45   3                  VirtualCOM_StringSend("recv ID timeout!\r\n"); // UART1发送一个字符串
  46   3                  appTaskState = 2;
  47   3              }
  48   2              break;
  49   2          case 2: //开机探头自检
  50   2              Start_sendOncePlusTask();
  51   2              appTaskState = 3;
  52   2              VirtualCOM_StringSend("sensor self check!\r\n"); // UART1发送一个字符串
  53   2              break;
  54   2          case 3: //获取探头自检结果
C51 COMPILER V9.54   TASK                                                                  03/02/2022 21:27:51 PAGE 2   

  55   2              if (Get_SendOncePlusTaskFlag() == 0)
  56   2              {
  57   3                  if (Get_sensorOkFlag())
  58   3                  {
  59   4                      VirtualCOM_StringSend("sensor is ok!\r\n"); // UART1发送一个字符串
  60   4                      appTaskState = 4;                           //检测到探头
  61   4                  }
  62   3                  else
  63   3                  {
  64   4                      VirtualCOM_StringSend("No sensor!\r\n"); // UART1发送一个字符串
  65   4                      appTaskState = 0;                        //无探头从头开始
  66   4                  }
  67   3              }
  68   2              break;
  69   2          case 4: //开始测距结果
  70   2              Start_sendOncePlusTask();
  71   2              appTaskTimeCnt = Get_SysHalfMsTick();
  72   2              appTaskState = 5;
  73   2              break;
  74   2          case 5: //判断是否有障碍物
  75   2              if (Get_SendOncePlusTaskFlag() == 0)
  76   2              {
  77   3                  if (Get_obstaclesExistenceFlag()) //有障碍物
  78   3                  {
  79   4                      if (get_time_escape_sec(Get_SysHalfMsTick(), appTaskTimeCnt) >= 100) // 50ms测试一次
  80   4                      {
  81   5                          VirtualCOM_StringSend("there is obstacle!\r\n"); // UART1发送一个字符串
  82   5                          appTaskState = 4;
  83   5                      }
  84   4                  }
  85   3                  else //没有障碍物
  86   3                  {
  87   4                      if (get_time_escape_sec(Get_SysHalfMsTick(), appTaskTimeCnt) >= 400) // 200ms测试一次
  88   4                      {
  89   5                          //获取测试距离
  90   5                          VirtualCOM_StringSend("No obstacles!\r\n"); // UART1发送一个字符串
  91   5                          appTaskState = 4;
  92   5                      }
  93   4                  }
  94   3              }
  95   2              break;
  96   2          default:
  97   2              break;
  98   2          }
  99   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    218    ----
   CONSTANT SIZE    =    117    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
