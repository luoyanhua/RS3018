C51 COMPILER V9.54   MAIN                                                                  04/23/2022 08:59:34 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\list\main.obj
COMPILER INVOKED BY: D:\keil\keil_C51\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\list\ma
                    -in.lst) OBJECT(.\list\main.obj)

line level    source

   1          /*---------------------------------------------------------------------*/
   2          /* --- STC MCU Limited ------------------------------------------------*/
   3          /* --- STC 1T Series MCU Demo Programme -------------------------------*/
   4          /* --- Mobile: (86)13922805190 ----------------------------------------*/
   5          /* --- Fax: 86-0513-55012956,55012947,55012969 ------------------------*/
   6          /* --- Tel: 86-0513-55012928,55012929,55012966 ------------------------*/
   7          /* --- Web: www.STCMCU.com --------------------------------------------*/
   8          /* --- Web: www.STCMCUDATA.com  ---------------------------------------*/
   9          /* --- QQ:  800003751 -------------------------------------------------*/
  10          /* Èç¹ûÒªÔÚ³ÌÐòÖÐÊ¹ÓÃ´Ë´úÂë,ÇëÔÚ³ÌÐòÖÐ×¢Ã÷Ê¹ÓÃÁËSTCµÄ×ÊÁÏ¼°³ÌÐò            */
  11          /*---------------------------------------------------------------------*/
  12          
  13          #include "config.h"
  14          #include "GPIO.h"
  15          #include "UART.h"
  16          #include "delay.h"
  17          #include "WDT.h"
  18          #include "timer.h"
  19          #include "Sensor.h"
  20          #include "Beep.h"
  21          #include "Task.h"
  22          #include "Exti.h"
  23          
  24          /*************   ¹¦ÄÜËµÃ÷   ***************
  25          
  26          ±¾Àý³Ì»ùÓÚSTC8G1K08-QFN20½øÐÐ±àÐ´²âÊÔ
  27          
  28          PCA0  Ê¹ÓÃ¶¨Ê±Æ÷0»ñµÃ40KHzÊä³ö
  29          ²¶»ñÂö¿íÊ±¼ä=²¶×½µÄÊ±ÖÓÊý/PCAÊ±ÖÓÔ´, ±ÈÈç ²¶×½µÄÊ±ÖÓÊý = 256, PCAÊ±ÖÓÔ´ = 20MHz(1T), Âö¿í = 256/20MHz = 12
             -.8us.
  30          ÏÂÔØÊ±, Ñ¡ÔñÊ±ÖÓ 20MHz (ÓÃ»§¿ÉÔÚ"config.h"ÐÞ¸ÄÆµÂÊ).
  31          
  32          ******************************************/
  33          
  34          /*************  ±¾µØ³£Á¿ÉùÃ÷    **************/
  35          
  36          /*************  ±¾µØ±äÁ¿ÉùÃ÷    **************/
  37          
  38          /*************  ±¾µØº¯ÊýÉùÃ÷    **************/
  39          
  40          /*************  Íâ²¿º¯ÊýºÍ±äÁ¿ÉùÃ÷ *****************/
  41          
  42          /******************** IO¿ÚÅäÖÃ ********************/
  43          void GPIO_config(void)
  44          {
  45   1              GPIO_InitTypeDef GPIO_InitStructure; //½á¹¹¶¨Òå
  46   1      
  47   1              GPIO_InitStructure.Pin = GPIO_Pin_All;          //Ö¸¶¨Òª³õÊ¼»¯µÄIO, GPIO_Pin_0 ~ GPIO_Pin_7, »ò²Ù×÷
  48   1              GPIO_InitStructure.Mode = GPIO_PullUp;          //Ö¸¶¨IOµÄÊäÈë»òÊä³ö·½Ê½,GPIO_PullUp,GPIO_HighZ,GPIO_OUT_OD,GPIO_
             -OUT_PP
  49   1              GPIO_Inilize(GPIO_P1, &GPIO_InitStructure); //³õÊ¼»¯
  50   1      
  51   1              GPIO_InitStructure.Pin = GPIO_Pin_All;          //Ö¸¶¨Òª³õÊ¼»¯µÄIO, GPIO_Pin_0 ~ GPIO_Pin_7, »ò²Ù×÷
  52   1              GPIO_InitStructure.Mode = GPIO_PullUp;          //Ö¸¶¨IOµÄÊäÈë»òÊä³ö·½Ê½,GPIO_PullUp,GPIO_HighZ,GPIO_OUT_OD,GPIO_
C51 COMPILER V9.54   MAIN                                                                  04/23/2022 08:59:34 PAGE 2   

             -OUT_PP
  53   1              GPIO_Inilize(GPIO_P3, &GPIO_InitStructure); //³õÊ¼»¯
  54   1      }
  55          
  56          /************************ ¶¨Ê±Æ÷ÅäÖÃ ****************************/
  57          void Timer_config(void)
  58          {
  59   1              TIM_InitTypeDef TIM_InitStructure;                                                         //½á¹¹¶¨Òå
  60   1              TIM_InitStructure.TIM_Mode = TIM_16BitAutoReload;                          //Ö¸¶¨¹¤×÷Ä£Ê½,   TIM_16BitAutoReload,TIM_16Bit,TI
             -M_8BitAutoReload,TIM_16BitAutoReloadNoMask
  61   1              TIM_InitStructure.TIM_Priority = Priority_1;                               //Ö¸¶¨ÖÐ¶ÏÓÅÏÈ¼¶(µÍµ½¸ß) Priority_0,Priority_1,Priorit
             -y_2,Priority_3
  62   1              TIM_InitStructure.TIM_Interrupt = DISABLE;                                         //ÖÐ¶ÏÊÇ·ñÔÊÐí,   ENABLE»òDISABLE
  63   1              TIM_InitStructure.TIM_ClkSource = TIM_CLOCK_1T;                            //Ö¸¶¨Ê±ÖÓÔ´,     TIM_CLOCK_1T,TIM_CLOCK_12T,TIM_CL
             -OCK_Ext
  64   1              TIM_InitStructure.TIM_ClkOut = DISABLE;                                            //ÊÇ·ñÊä³ö¸ßËÙÂö³å, ENABLE»òDISABLE
  65   1              TIM_InitStructure.TIM_Value = 65536UL - (MAIN_Fosc / 80000UL); //³õÖµ,    80KHz   12.5usÖÐ¶ÏÒ»´Î
  66   1              TIM_InitStructure.TIM_Run = ENABLE;                                                        //ÊÇ·ñ³õÊ¼»¯ºóÆô¶¯¶¨Ê±Æ÷, ENABLE»òDISABLE
  67   1              Timer_Inilize(Timer0, &TIM_InitStructure);                                         //³õÊ¼»¯Timer0         Timer0,Timer1,Timer2,Timer3,Timer4
  68   1      
  69   1              TIM_InitStructure.TIM_Mode = TIM_16BitAutoReload;                       //Ö¸¶¨¹¤×÷Ä£Ê½,   TIM_16BitAutoReload,TIM_16Bit,TIM_8
             -BitAutoReload,TIM_16BitAutoReloadNoMask
  70   1              TIM_InitStructure.TIM_Priority = Priority_0;                            //Ö¸¶¨ÖÐ¶ÏÓÅÏÈ¼¶(µÍµ½¸ß) Priority_0,Priority_1,Priority_2
             -,Priority_3
  71   1              TIM_InitStructure.TIM_Interrupt = ENABLE;                                       //ÖÐ¶ÏÊÇ·ñÔÊÐí,   ENABLE»òDISABLE
  72   1              TIM_InitStructure.TIM_ClkSource = TIM_CLOCK_1T;                         //Ö¸¶¨Ê±ÖÓÔ´, TIM_CLOCK_1T,TIM_CLOCK_12T,TIM_CLOCK_Ext
  73   1              TIM_InitStructure.TIM_ClkOut = DISABLE;                                         //ÊÇ·ñÊä³ö¸ßËÙÂö³å, ENABLE»òDISABLE
  74   1              TIM_InitStructure.TIM_Value = 65536UL - (MAIN_Fosc / 4000); //³õÖµ,    250usÖÐ¶ÏÒ»´Î
  75   1              TIM_InitStructure.TIM_Run = ENABLE;                                                     //ÊÇ·ñ³õÊ¼»¯ºóÆô¶¯¶¨Ê±Æ÷, ENABLE»òDISABLE
  76   1              Timer_Inilize(Timer1, &TIM_InitStructure);                                      //³õÊ¼»¯Timer1    Timer0,Timer1,Timer2,Timer3,Timer4
  77   1      }
  78          
  79          /***************  ´®¿Ú³õÊ¼»¯º¯Êý *****************/
  80          void UART_config(void)
  81          {
  82   1              COMx_InitDefine COMx_InitStructure;                              //½á¹¹¶¨Òå
  83   1              COMx_InitStructure.UART_Mode = UART_8bit_BRTx;   //Ä£Ê½,   UART_ShiftRight,UART_8bit_BRTx,UART_9bit,UART_9
             -bit_BRTx
  84   1                                                                                                               //     COMx_InitStructure.UART_BRT_Use   = BRT_Timer2;                 //Ñ¡Ôñ²¨ÌØÂÊ·¢ÉúÆ÷, BRT_Timer2 (×¢Òâ: ´
             -®¿Ú2¹Ì¶¨Ê¹ÓÃBRT_Timer2, ËùÒÔ²»ÓÃÑ¡Ôñ)
  85   1              COMx_InitStructure.UART_BaudRate = 9600ul;               //²¨ÌØÂÊ,     110 ~ 115200
  86   1              COMx_InitStructure.UART_RxEnable = ENABLE;               //½ÓÊÕÔÊÐí,   ENABLE»òDISABLE
  87   1              COMx_InitStructure.UART_Interrupt = ENABLE;              //ÖÐ¶ÏÔÊÐí,   ENABLE»òDISABLE
  88   1              COMx_InitStructure.UART_Priority = Priority_0;   //Ö¸¶¨ÖÐ¶ÏÓÅÏÈ¼¶(µÍµ½¸ß) Priority_0,Priority_1,Priority_2
             -,Priority_3
  89   1              COMx_InitStructure.UART_P_SW = UART2_SW_P10_P11; //ÇÐ»»¶Ë¿Ú,   UART2_SW_P10_P11,UART2_SW_P46_P47
  90   1              UART_Configuration(UART2, &COMx_InitStructure);  //³õÊ¼»¯´®¿Ú2 UART1,UART2,UART3,UART4
  91   1      }
  92          
  93          /******************** WDTÅäÖÃ ********************/
  94          void WDT_config(void)
  95          {
  96   1              WDT_InitTypeDef WDT_InitStructure; //½á¹¹¶¨Òå
  97   1      
  98   1              WDT_InitStructure.WDT_Enable = ENABLE;                   //ÖÐ¶ÏÊ¹ÄÜ   ENABLE»òDISABLE
  99   1              WDT_InitStructure.WDT_IDLE_Mode = WDT_IDLE_STOP; // IDLEÄ£Ê½ÊÇ·ñÍ£Ö¹¼ÆÊý                WDT_IDLE_STOP,WDT_IDLE_RUN
 100   1              WDT_InitStructure.WDT_PS = WDT_SCALE_16;                 //¿´ÃÅ¹·¶¨Ê±Æ÷Ê±ÖÓ·ÖÆµÏµÊý             WDT_SCALE_2,WDT_SCALE_4,WDT_SCALE_
             -8,WDT_SCALE_16,WDT_SCALE_32,WDT_SCALE_64,WDT_SCALE_128,WDT_SCALE_256
 101   1              WDT_Inilize(&WDT_InitStructure);                                 //³õÊ¼»¯
 102   1      }
 103          
 104          /******************** task A **************************/
C51 COMPILER V9.54   MAIN                                                                  04/23/2022 08:59:34 PAGE 3   

 105          void main(void)
 106          {
 107   1              GPIO_config();
 108   1              Timer_config();
 109   1              UART_config();
 110   1              WDT_config();
 111   1              EA = 1;
 112   1      
 113   1              while (1)
 114   1              {
 115   2                      sensorIdAdjustTask();   //Ì½Í·Î»ÖÃÊ¶±ðÈÎÎñ
*** WARNING C206 IN LINE 115 OF main.c: 'sensorIdAdjustTask': missing function-prototype
 116   2                      AppTask();                      //×ÜÁ÷³Ì´¦ÀíÈÎÎñ
 117   2                      BeepAlarmTask();        //·äÃùÆ÷±¨¾¯ÈÎÎñ
 118   2                      SendOncePlusTask(); //·¢ËÍÂö³åÈºÈÎÎñ
 119   2                      WDT_Clear();            // Î¹¹·
 120   2              }
 121   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    175    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      25
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
